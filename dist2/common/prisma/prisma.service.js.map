{"version":3,"sources":["sourceMap"],"names":["__decorate","_0x155816","_0x4de467","_0x416c94","_0x4c6286","_0x1490d1","arguments","_0x24ccf5","Object","_0x34165f","Reflect","_0x107f45","__metadata","_0x18f006","_0x28cf73","PrismaService_1","exports","common_1","require","client_1","PrismaService","constructor","_0x382f74","_0x5d2227","_0x5e8c71","_0x38b84d","Promise","_0x24a792","setTimeout","_0x526dcf","_0x34f981"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar PrismaService_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PrismaService = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst client_1 = require(\"@prisma/client\");\nlet PrismaService = PrismaService_1 = class PrismaService extends client_1.PrismaClient {\n    constructor() {\n        super({\n            log: [{ emit: 'event', level: 'query' }],\n        });\n        this.logger = new common_1.Logger(PrismaService_1.name);\n    }\n    async connectWithRetry(maxRetries, delay) {\n        let attempts = 0;\n        while (attempts < maxRetries) {\n            try {\n                await this.$connect();\n                this.logger.log('Connected to the database successfully.');\n                return;\n            }\n            catch (error) {\n                attempts++;\n                this.logger.error(`Database connection attempt ${attempts} failed:`, error);\n                if (attempts >= maxRetries) {\n                    this.logger.error('Maximum connection attempts reached. Exiting...');\n                    throw error;\n                }\n                this.logger.log(`Retrying to connect to the database in ${delay}ms...`);\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    async onModuleInit() {\n        const MAX_RETRIES = 5;\n        const RETRY_DELAY = 2000;\n        await this.connectWithRetry(MAX_RETRIES, RETRY_DELAY);\n    }\n};\nexports.PrismaService = PrismaService;\nexports.PrismaService = PrismaService = PrismaService_1 = __decorate([\n    (0, common_1.Injectable)(),\n    __metadata(\"design:paramtypes\", [])\n], PrismaService);\n//# sourceMappingURL=prisma.service.js.map"]}