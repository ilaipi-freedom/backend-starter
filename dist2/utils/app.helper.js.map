{"version":3,"sources":["sourceMap"],"names":["Object","exports","net_1","require","config_1","core_1","swagger_1","nestjs_pino_1","serverBootstrap","_0x411561","_0x4eb60f","_0x13b3e8","_0x5217ea","appPort","_0xa1b441","apiPrefix","_0x47587e","_0x113d48","_0x3374a","_0x4a5b35","cliBootstrap","_0x409e96","_0x544e0a","_0x1b6442","_0x55ded5","_0x5681da","isProd","_0x436c55","_0x1e657a"],"mappings":"AAAA,a,yzBACAA,MAAA,C,eAAA,EAAsBC,OAAtB,C,YAAA,CAA6C,C,OAAE,C,IAAF,CAA7C,C,CACAA,OAAA,C,cAAA,EAAuBA,OAAA,C,eAAA,EAA0BA,OAAA,C,QAAA,EAAiB,K,GADlE,CAEA,MAAMC,KAAA,CAAQC,OAAA,C,gBAAA,CAAd,CACMC,QAAA,CAAWD,OAAA,C,eAAA,CADjB,CAEME,MAAA,CAASF,OAAA,C,gBAAA,CAFf,CAGMG,SAAA,CAAYH,OAAA,C,eAAA,CAHlB,CAIMI,aAAA,CAAgBJ,OAAA,C,eAAA,CAJtB,CAKMK,eAAA,CAAkB,MAAOC,SAAP,E,wIACdC,SAAA,CAAM,MAAML,MAAA,C,eAAA,E,eAAA,EAA0BI,SAA1B,C,CACZE,SAAA,CAAgBD,SAAA,C,eAAA,EAAQN,QAAA,C,eAAA,CAAR,C,CAChBQ,SAAA,CAAcD,SAAA,C,eAAA,E,2BAAA,C,CACd,CAAEE,OAAA,CAAAC,SAAF,CAAWC,SAAA,CAAAC,SAAX,EAAyBL,SAAA,C,eAAA,E,0BAAA,C,CAC/BD,SAAA,C,iBAAA,EAAoBM,SAApB,EACA,MAAMC,SAAA,CAASP,SAAA,C,eAAA,EAAQH,aAAA,C,eAAA,CAAR,CAAf,CACAG,SAAA,C,gBAAA,EAAcO,SAAd,EACA,MAAMC,QAAA,CAAS,IAAIZ,SAAA,C,kBAAA,CAAJ,G,gBAAA,E,2BAAA,E,gBAAA,E,0BAAA,E,eAAA,I,gBAAA,EAIHM,SAJG,E,OAAA,GAAf,CAMMO,SAAA,CAAWb,SAAA,C,eAAA,E,gBAAA,EAAuCI,SAAvC,CAA4CQ,QAA5C,CANjB,CAOAZ,SAAA,C,eAAA,E,gBAAA,EAAiCU,S,WAAjC,CAAsDN,SAAtD,CAA2DS,SAA3D,CAAqE,C,gBACjE,CAAgB,C,sBAAE,C,IAAF,CADiD,CAArE,C,CAGA,MAAMT,SAAA,C,QAAA,EAAWI,SAAX,C,CACNG,SAAA,C,gBAAA,EAAcL,S,uBAAwBE,SAAtC,C,EAxBJ,CA0BAb,OAAA,C,eAAA,EAA0BO,eAA1B,CACA,MAAMY,YAAA,CAAe,MAAOC,SAAP,E,2BACXC,SAAA,CAAM,MAAMjB,MAAA,C,eAAA,E,0BAAA,EAA4CgB,SAA5C,C,CAClB,MAAMC,SAAA,C,eAAA,GAAN,CACA,MAAMC,SAAA,CAAgBD,SAAA,C,eAAA,EAAQlB,QAAA,C,eAAA,CAAR,CAAtB,CACMoB,SAAA,CAAcD,SAAA,C,eAAA,E,eAAA,CADpB,CAEME,SAAA,CAASH,SAAA,C,eAAA,EAAQf,aAAA,C,eAAA,CAAR,CAFf,CAGAe,SAAA,C,gBAAA,EAAcG,SAAd,C,CACAA,SAAA,C,gBAAA,EAAcD,S,iBAAd,C,CACC,C,GAAA,CAAGtB,KAAA,C,cAAA,CAAH,CAAD,G,gBAAA,G,EARJ,C,qrBAUAD,OAAA,C,eAAA,EAAuBmB,YAAvB,CACA,MAAMM,MAAA,CAAUC,SAAD,E,sDACLC,SAAA,CAAaD,SAAA,C,KAAA,E,gBAAA,C,QACZC,SAAA,G,4BAFX,CAIA3B,OAAA,C,gBAAA,EAAiByB,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cliBootstrap = exports.serverBootstrap = exports.isProd = void 0;\nconst net_1 = require(\"net\");\nconst config_1 = require(\"@nestjs/config\");\nconst core_1 = require(\"@nestjs/core\");\nconst swagger_1 = require(\"@nestjs/swagger\");\nconst nestjs_pino_1 = require(\"nestjs-pino\");\nconst serverBootstrap = async (mo) => {\n    const app = await core_1.NestFactory.create(mo);\n    const configService = app.get(config_1.ConfigService);\n    const appInstance = configService.get('env.appInstance');\n    const { appPort, apiPrefix } = configService.get('env.bootstrap');\n    app.setGlobalPrefix(apiPrefix);\n    const logger = app.get(nestjs_pino_1.Logger);\n    app.useLogger(logger);\n    const config = new swagger_1.DocumentBuilder()\n        .setTitle('Backend API')\n        .setVersion('1.0')\n        .addBearerAuth()\n        .addTag(appInstance)\n        .build();\n    const document = swagger_1.SwaggerModule.createDocument(app, config);\n    swagger_1.SwaggerModule.setup(`${apiPrefix}/apidocs`, app, document, {\n        swaggerOptions: { persistAuthorization: true },\n    });\n    await app.listen(appPort);\n    logger.log(`${appInstance} start at ${appPort}`);\n};\nexports.serverBootstrap = serverBootstrap;\nconst cliBootstrap = async (mo) => {\n    const app = await core_1.NestFactory.createApplicationContext(mo);\n    await app.init();\n    const configService = app.get(config_1.ConfigService);\n    const appInstance = configService.get('env.appInstance');\n    const logger = app.get(nestjs_pino_1.Logger);\n    app.useLogger(logger);\n    logger.log(`${appInstance} app start`);\n    (0, net_1.createServer)().listen();\n};\nexports.cliBootstrap = cliBootstrap;\nconst isProd = (config) => {\n    const deployment = config.get('env.appDeployment');\n    return deployment === 'prod';\n};\nexports.isProd = isProd;\n//# sourceMappingURL=app.helper.js.map"]}