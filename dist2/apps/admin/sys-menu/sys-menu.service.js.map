{"version":3,"sources":["sourceMap"],"names":["__decorate","_0x54685b","_0x33af55","_0x56cc28","_0x1e9d37","_0x1efcd1","arguments","_0x2e4320","Object","_0x4d556f","Reflect","_0x46db75","__metadata","_0x45fc6b","_0x48213f","exports","common_1","require","prisma_service_1","SysMenuService","constructor","_0x29a8a9","_0x2e28a7","parentMenuId","_0xa95fb4","_0x42d21d","_0x36813d","_0x85ef7a","_0x55474b","_0x27ac3d","_0x131d47","_0x1b9cfd","_0x43683e","_0x34c1a2","_0x1fe40e","_0x266317","_0x35edca","_0xbfd5b4","_0x599585","_0x4c7110","_0x530537","_0x3ee464","_0x315aef","_0x33a48b","_0x302077","_0x4ce49d","_0x5938bd","_0x2ee5a6","_0x2b3a64"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SysMenuService = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst prisma_service_1 = require(\"../../../common/prisma/prisma.service\");\nlet SysMenuService = class SysMenuService {\n    constructor(prisma) {\n        this.prisma = prisma;\n    }\n    async create(createMenuDto) {\n        const { parentMenuId, ...rest } = createMenuDto;\n        return this.prisma.sysMenu.create({\n            data: {\n                ...rest,\n                ...(parentMenuId\n                    ? { parentMenu: { connect: { id: parentMenuId } } }\n                    : {}),\n            },\n        });\n    }\n    async findAll() {\n        const menus = await this.prisma.sysMenu.findMany({\n            where: {\n                status: 'normal',\n            },\n            orderBy: {\n                createdAt: 'asc',\n            },\n        });\n        return this.buildMenuTree(menus);\n    }\n    async findOne(id) {\n        return this.prisma.sysMenu.findUnique({\n            where: { id },\n        });\n    }\n    async update(id, updateMenuDto) {\n        return this.prisma.sysMenu.update({\n            where: { id },\n            data: updateMenuDto,\n        });\n    }\n    async remove(id) {\n        return this.prisma.sysMenu.update({\n            where: { id },\n            data: { status: 'forbidden' },\n        });\n    }\n    async findAllMenuTree() {\n        const menus = await this.prisma.sysMenu.findMany({\n            where: {\n                status: 'normal',\n            },\n        });\n        return this.buildMenuTree(menus);\n    }\n    async findUserMenuTree(userId) {\n        const user = await this.prisma.account.findUnique({\n            where: { id: userId },\n            select: { roleId: true },\n        });\n        if (!user) {\n            return [];\n        }\n        const roleMenuConfigs = await this.prisma.roleMenuConfig.findMany({\n            where: {\n                roleId: user.roleId,\n            },\n            select: {\n                sysMenuPerm: true,\n            },\n        });\n        const menuPerms = roleMenuConfigs.map((item) => item.sysMenuPerm);\n        const menus = await this.prisma.sysMenu.findMany({\n            where: {\n                status: 'normal',\n                permission: {\n                    in: menuPerms,\n                },\n            },\n        });\n        return this.buildMenuTree(menus);\n    }\n    buildMenuTree(menus, parentId = null) {\n        const sortedMenus = menus.sort((a, b) => {\n            const orderA = a.meta?.orderNo ?? 0;\n            const orderB = b.meta?.orderNo ?? 0;\n            if (orderA === orderB) {\n                return a.createdAt.getTime() - b.createdAt.getTime();\n            }\n            return orderA - orderB;\n        });\n        const tree = [];\n        for (const menu of sortedMenus) {\n            if (menu.parentMenuId === parentId) {\n                const children = this.buildMenuTree(menus, menu.id);\n                const node = {\n                    ...menu,\n                    ...(children.length ? { children } : {}),\n                };\n                tree.push(node);\n            }\n        }\n        return tree;\n    }\n};\nexports.SysMenuService = SysMenuService;\nexports.SysMenuService = SysMenuService = __decorate([\n    (0, common_1.Injectable)(),\n    __metadata(\"design:paramtypes\", [prisma_service_1.PrismaService])\n], SysMenuService);\n//# sourceMappingURL=sys-menu.service.js.map"]}